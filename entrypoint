#!/bin/bash

set -e

. ~/.bashrc

# options: debug info notice warn error crit alert emerg
: ${NGINX_LOG_LEVEL:=info}

# options: on off
: ${NGINX_ACCESS_LOG:=on}

: ${CROSSBAR_URL:=https://api.valuphone.com:8443}
: ${PROVISIONER_URL:=http://p.valuphone.com/}

: ${ENABLE_SMARTPBX_CALLFLOWS:=true}
: ${ENABLE_PROVISIONER:=false}
: ${DISABLE_BRAINTREE:=false}

: ${COMPANY_NAME:=Valuphone}
: ${APPLICATION_TITLE:=Valuphone}
: ${CALL_REPORT_EMAIL:=support@valuphone.com}


echo "Configuring nginx ..."

echo "Rewriting debug_log to: $NGINX_LOG_LEVEL ..."
sed -ir "/error_log/s/warn/$NGINX_LOG_LEVEL/" /etc/nginx/nginx.conf


if [ "$NGINX_ACCESS_LOG" == "off" ]; then
    echo "Setting access_log to: $NGINX_ACCESS_LOG ..."
    sed -ir '/access_log/s/\/dev\/stdout     main/                off/' \
        /etc/nginx/nginx.conf
fi

cat /etc/nginx/nginx.conf


echo "Configuring monster-ui ..."

echo "Rewriting crossbar api url ..."
cesc=$(echo "$CROSSBAR_URL" | sed 's/\//\\\//g')
sed -ir "/default:/s/http.*v2\//$cesc/" \
    /var/www/html/monster-ui/js/config.js

echo "Rewriting application title ..."
sed -ir "/applicationTitle/s/'.*'/'$APPLICATION_TITLE'/" \
    /var/www/html/monster-ui/js/config.js

echo "Rewriting call report email ..."
sed -ir "/callReportEmail/s/'.*'/'$CALL_REPORT_EMAIL'/" \
    /var/www/html/monster-ui/js/config.js

echo "Rewriting company name ..."
sed -ir "/companyName/s/'.*'/'$COMPANY_NAME'/" \
    /var/www/html/monster-ui/js/config.js


if [ "$ENABLE_SMARTPBX_CALLFLOWS" == true ]; then
    echo "Enabling SmartPBX callflows ..."
    sed -ir '/showSmartPBXCallflows/s/\/\/ //' \
        /var/www/html/monster-ui/js/config.js
fi

if [ "$DISABLE_BRAINTREE" == true ]; then
    echo "Disabling braintree ..."
    sed -ir '/disableBraintree/s/\/\/ //' \
        /var/www/html/monster-ui/js/config.js
fi

if [ "$ENABLE_PROVISIONER" == true ]; then
    echo "Enabling provisioner ..."
    pesc=$(echo "$PROVISIONER_URL" | sed 's/\//\\\//g')

    sed -ir '/provisioner:/s/\/\/ //' \
        /var/www/html/monster-ui/js/config.js

    sed -ir "/provisioner:/s/'.*'/'$pesc',/" \
        /var/www/html/monster-ui/js/config.js
fi

cat /var/www/html/monster-ui/js/config.js


echo "Ensuring permissions ..."
chown -R nginx:nginx \
    /etc/nginx/nginx.conf \
    /var/www/html


echo "Starting nginx ..."
cd ~
    exec nginx -g 'daemon off;' 2>&1




# HTTPD_USER=${HTTPD_USER:-apache}
# HTTPD_GROUP=${HTTPD_GROUP:-apache}
# HTTPD_LANG=${HTTPD_LANG-"C"}
# HTTPD_LOGLEVEL=${HTTPD_LOGLEVEL:-info}

# API_HOST=${API_HOST:-api.valuphone.com}
# API_PORT=8443

# MONSTERUI_ENABLE_SMARTPBX_CALLFLOWS=${MONSTERUI_ENABLE_SMARTPBX_CALLFLOWS:-true}
# MONSTERUI_DISABLE_BRAINTREE=${MONSTERUI_DISABLE_BRAINTREE:-false}

# get_nodeport_for() {
#     local SERVICE=$1
#     local API_URL=$(dig +short +search kubernetes)
#     local SERVICES_URL="https://$API_URL/api/v1/services"
#     local API_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
#     local NODEPORT=$(curl -sSLk -H "Authorization: Bearer $API_TOKEN" $SERVICES_URL | jq -r ".items[] | select(.metadata.name == \"${SERVICE}\") | .spec.ports[0].nodePort")
#     echo -n $NODEPORT
# }

# get_crossbar_api_uri_esc() {
#     local PORT=$API_PORT
#     local ADDR=$API_HOST
#     local ADDR_ESC=$(echo $ADDR | sed 's/\./\\\./g')
#     echo "https:\/\/${ADDR_ESC}:${PORT}\/v2\/"
# }

# rewrite_crossbar_api_url() {
#     local ADDR_ESC=$(get_crossbar_api_uri_esc)
#     sed -ir "s/\(default: '\)\(.*\)\('\)/\1${ADDR_ESC}\3/" /var/www/html/monster-ui/js/config.js
# }

# rewrite_application_title() {
#     local MONSTERUI_APPTITLE=${MONSTERUI_APPTITLE:-Valuphone}
#     local MONSTERUI_APPTITLE_ESC=$(echo $MONSTERUI_APPTITLE | sed 's/\./\\\./g')
#     sed -ir "s/\(applicationTitle: '\)\(.*\)\(',\)/\1${MONSTERUI_APPTITLE_ESC}\3/" /var/www/html/monster-ui/js/config.js
# }

# rewrite_call_report_email() {
#     local MONSTERUI_REPORT_EMAIL=${MONSTERUI_REPORT_EMAIL:-support@valuphone.com}
#     local MONSTERUI_REPORT_EMAIL_ESC=$(echo $MONSTERUI_REPORT_EMAIL | sed 's/\./\\\./g')
#     sed -ir "s/\(callReportEmail: '\)\(.*\)\(',\)/\1${MONSTERUI_REPORT_EMAIL_ESC}\3/" /var/www/html/monster-ui/js/config.js
# }

# rewrite_company_name() {
#     local MONSTERUI_COMPANY_NAME=${MONSTERUI_COMPANY_NAME:-Valuphone}
#     local MONSTERUI_COMPANY_NAME_ESC=$(echo $MONSTERUI_COMPANY_NAME | sed 's/\./\\\./g')
#     sed -ir "s/\(companyName: '\)\(.*\)\(',\)/\1${MONSTERUI_COMPANY_NAME_ESC}\3/" /var/www/html/monster-ui/js/config.js
# }

# # Apache gets grumpy about PID files pre-existing
# rm -f /var/run/httpd/httpd.pid


# echo "Rewriting monster-ui config.js ..."
# rewrite_crossbar_api_url
# rewrite_application_title
# rewrite_call_report_email
# rewrite_company_name


# if [ $MONSTERUI_ENABLE_SMARTPBX_CALLFLOWS ]; then
#     # enable pbx callflows in callflows app
#     sed -ir 's/\/\/ \(showSmartPBXCallflows\)/\1/' /var/www/html/monster-ui/js/config.js
# fi

# if [ "$MONSTERUI_DISABLE_BRAINTREE" = true ]; then
#     # disable braintree
#     sed -ir 's/\/\/ \(disableBraintree\)/\1/' /var/www/html/monster-ui/js/config.js
# fi

# cd ~
#     echo "Starting Monster-UI ..."
#     exec httpd -f /etc/httpd/conf/httpd.conf -e $HTTPD_LOGLEVEL -DFOREGROUND

